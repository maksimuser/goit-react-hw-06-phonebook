{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactList/ContactList.module.scss","redux/contacts/contacts-actions.js","contacts.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contacts","items","createReducer","state","filter","contact","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","nameId","numberId","handleChange","e","currentTarget","value","setState","findName","props","normalizedName","toLowerCase","find","handleSubmit","preventDefault","onSubmit","alert","resetForm","this","className","styles","Form","autoComplete","Form__label","htmlFor","Form__name","type","pattern","title","required","placeholder","onChange","Form__tel","Form__btn","Component","connect","dispatch","Filter","filterId","Filter__label","Filter__input","defaultProps","ContactItem","onDeleteItem","ContactItem__text","ContactItem__btn","onClick","ContactList","onDeleteContact","map","allContacts","normalizedFilter","includes","getVisibleContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.95d0d037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__3PUVO\",\"Form__name\":\"ContactForm_Form__name__YJTVi\",\"Form__tel\":\"ContactForm_Form__tel__2yj_Q\",\"Form__btn\":\"ContactForm_Form__btn__36tVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__9E4Ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__AzPvb\",\"ContactItem__text\":\"ContactItem_ContactItem__text__1BuEe\",\"ContactItem__btn\":\"ContactItem_ContactItem__btn__ptivf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__g03wy\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addNewContact = createAction(\n  'contacts/addContact',\n  ({ name, number }) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  }),\n);\n\nexport const deleteContact = createAction('contacts/deleteContact');\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const contacts = [\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n];\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addNewContact, deleteContact, changeFilter } from './contacts-actions';\nimport { contacts } from '../../contacts';\n\nconst items = createReducer(contacts, {\n  [addNewContact]: (state, { payload }) => [payload, ...state],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default contactsReducer;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from '../redux/contacts/contacts-reducer';\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { addNewContact } from '../../redux/contacts/contacts-actions';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = { name: '', number: '' };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  findName = name => {\n    const { contacts } = this.props;\n    const normalizedName = name.toLowerCase();\n    return contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName,\n    );\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { onSubmit } = this.props;\n\n    const checkName = this.findName(name);\n\n    if (checkName) {\n      alert(`${name} is already in contacts`);\n      this.resetForm();\n      return;\n    }\n\n    onSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form\n        className={styles.Form}\n        onSubmit={this.handleSubmit}\n        autoComplete=\"off\"\n      >\n        <label className={styles.Form__label} htmlFor={this.nameId}>\n          Name{' '}\n        </label>\n        <input\n          className={styles.Form__name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Type name\"\n          value={name}\n          onChange={this.handleChange}\n          id={this.nameId}\n        />\n\n        <label className={styles.Form__label} htmlFor={this.numberId}>\n          Number{' '}\n        </label>\n        <input\n          className={styles.Form__tel}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Type number\"\n          id={this.numberId}\n          value={number}\n          onChange={this.handleChange}\n        />\n\n        <button className={styles.Form__btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(addNewContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport styles from './Filter.module.scss';\n\nclass Filter extends Component {\n  filterId = uuidv4();\n  render() {\n    const { filter, onChange } = this.props;\n\n    return (\n      <div className={styles.Filter}>\n        <label className={styles.Filter__label} htmlFor={this.filterId}>\n          Find contacts by name{' '}\n        </label>\n        <input\n          className={styles.Filter__input}\n          type=\"text\"\n          value={filter}\n          id={this.filterId}\n          onChange={onChange}\n          placeholder=\"Type name contact\"\n        />\n      </div>\n    );\n  }\n}\n\nFilter.defaultProps = {\n  filter: '',\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactItem.module.scss';\n\nclass ContactItem extends Component {\n  render() {\n    const { name, number, onDeleteItem, id } = this.props;\n    const handleDelete = () => onDeleteItem(id);\n\n    return (\n      <li className={styles.ContactItem}>\n        <span className={styles.ContactItem__text}>\n          {name}: {number}\n        </span>\n        <button\n          className={styles.ContactItem__btn}\n          onClick={handleDelete}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteItem: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport styles from './ContactList.module.scss';\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n\n    return (\n      <ul className={styles.ContactList}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDeleteItem={onDeleteContact}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContact = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  const visivbleContacts = getVisibleContact(items, filter);\n\n  return {\n    contacts: visivbleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: id => dispatch(deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <div className=\"Container\">\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <div className=\"Contacts\">\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}